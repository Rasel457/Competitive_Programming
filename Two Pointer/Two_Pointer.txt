                                      Find the pair whose sum is equal to x 

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
int val1,val2;
bool solve(int *arr,int n,int x)
{
    int l=0;
    int r=n-1;
    int sum=0;

    while(l<r)
    {
        sum=arr[l]+arr[r];
        if(sum==x)
        {
            val1=arr[l];
            val2=arr[r];
            return true;
        }
        else if(sum>x)
        {
            r--;
        }
        else{
            l++;
        }
    }
    return false;
}

int main()
{
    int n;
    cin>>n;
    int arr[n+1];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    sort(arr,arr+n);
    int x;
    cin>>x;
    bool flag=solve(arr,n,x);
    if(flag)
    {
        cout<<"YES"<<endl;
        cout<<val1<<" "<<val2;
    }
    else
    {
        cout<<"NO"<<endl;
    }
}
----------------------------------------------------------------------------------------------------------

                            Find the pair in Array Whose sum is closest to X

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double

void solve(int *arr,int n,int x)
{
    int l=0;
    int r=n-1;
    int sum;
    int idx1,idx2;
    int def=INT_MAX;
    while(l<r)
    {
        sum=arr[l]+arr[r];
        if(abs(sum-x)<def)
        {
            idx1=l;
            idx2=r;
            def=abs(sum-x);
        }
        if(sum>x)
        {
            r--;
        }
        else{
            l++;
        }
    }
    cout<<"("<<" "<<arr[idx1]<<","<<arr[idx2]<<" "<<")"<<" "<<": "<<arr[idx1]+arr[idx2]<<endl;

}

int main()
{
    int n;
    cin>>n;
    int arr[n+1];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    sort(arr,arr+n);
    int x;
    cin>>x;
    solve(arr,n,x);

}
------------------------------------------------------------------------------------------------------

                                  Find the closest pair from two sorted arrays
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double


void solve(int *arr,int *brr,int n,int m,int x)
{
    int l=0;
    int r=m-1;
    int sum;
    int idx1,idx2;
    int def=INT_MAX;
    while(l<n && r>=0)
    {
        sum=arr[l]+brr[r];
        if(abs(sum-x)<def)
        {
            idx1=l;
            idx2=r;
            def=abs(sum-x);
        }
        if(sum>x)
        {
            r--;
        }
        else{
            l++;
        }
    }
    cout<<"("<<" "<<arr[idx1]<<","<<brr[idx2]<<" "<<")"<<" "<<": "<<arr[idx1]+brr[idx2]<<endl;

}

int main()
{
    int n,m;
    cin>>n>>m;
    int arr[n+1];
    int brr[m+1];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    for(int j=0;j<m;j++)
    {
        cin>>brr[j];
    }
    sort(arr,arr+n);
    sort(brr,brr+m);
    int x;
    cin>>x;
    solve(arr,brr,n,m,x);

}
----------------------------------------------------------------------------------------
                                   Find all triplets with zero sum
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double


void solve(int *arr,int n)
{
    for(int i=0;i<n;i++)
    {
        unordered_set<int>us;
        for(int j=i+1;j<n;j++)
        {
            int x=-(arr[i]+arr[j]);
            if(us.find(x)!=us.end())
            {
                cout<<"( "<<arr[i]<<","<<arr[j]<<","<<x<<" )"<<endl;;
            }
            else{
                us.insert(arr[j]);
            }
        }
    }
}

int main()
{
    int n;
    cin>>n;
    int arr[n+1];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    solve(arr,n);

}
-------------------------------------------------------------------------------------------------

                                   Find Three elements that sum to a given value
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double


void solve(int *arr,int n,int x)
{
    int flag=0;
    for(int i=0;i<n;i++)
    {
        int l=i+1;
        int r=n-1;
        while(l<r)
        {
            int sum=arr[i]+arr[l]+arr[r];
            if(sum==x)
            {
                cout<<"( "<<arr[i]<<","<<arr[l]<<","<<arr[r]<<" )"<<endl;
                flag=1;
            }
            if(sum>x)
            {
                r--;
            }
            else{
                l++;
            }
        }
    }
    if(flag==0)
    {
        cout<<"Triplet is not found"<<endl;
    }
}

int main()
{
    int n;
    cin>>n;
    int arr[n+1];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    sort(arr,arr+n);
    int x;
    cin>>x;
    solve(arr,n,x);

}
------------------------------------------------------------------------------------------
                                   Find four elements that sum to a given value
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double


void solve(int *arr,int n,int x)
{
    int flag=0;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            int l=j+1;
            int r=n-1;
            while(l<r)
            {
                int sum=arr[i]+arr[j]+arr[l]+arr[r];
                if(sum==x)
                {
                    cout<<"( "<<arr[i]<<","<<arr[j]<<","<<arr[l]<<","<<arr[r]<<" )"<<endl;
                    flag=1;
                }
                if(sum>x)
                {
                    r--;
                }
                else{
                    l++;
                }
            }
        }

    }
    if(flag==0)
    {
        cout<<"Not found"<<endl;
    }
}

int main()
{
    int n;
    cin>>n;
    int arr[n+1];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    sort(arr,arr+n);
    int x;
    cin>>x;
    solve(arr,n,x);

}
---------------------------------------------------------------------------------
                          Find a triplet such that sum of two equals to third element

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double

vector<int>vec;

void solve(int n)
{
    int flag=0;
    for(int i=n-1;i>=0;i--)
    {
         int x=vec[i];
         int l=0;
         int r=i-1;
         while(l<r)
        {
            int sum=vec[l]+vec[r];

            if(sum==x)
            {
                cout<<"( "<<vec[l]<<","<<vec[r]<<","<<sum<<" )"<<endl;
                flag=1;
            }
            if(sum>x)
            {
                r--;
            }
            else{
                l++;
            }
        }
    }

    if(flag==0)
    {
        cout<<"Not found"<<endl;
    }
}

int main()
{
    int n;
    cin>>n;
    int x;
    for(int i=0;i<n;i++)
    {
        cin>>x;
        vec.push_back(x);
    }
    sort(vec.begin(),vec.end());

    solve(n);


}

 




 