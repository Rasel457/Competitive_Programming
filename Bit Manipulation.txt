                                            Left Shift and Right Shift

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int q;
    cin>>q;
    while(q--)
    {
        int n,i;
        cin>>n>>i;
        //cout<<n<<" << "<<i<<" = "<<(n<<i)<<endl;//Left shift
        cout<<n<<" >> "<<i<<" = "<<(n>>i)<<endl;//Right shift
    }

}
----------------------------------------------------------------------------------------------
                                  Checking for ith set bit
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int q;
    cin>>q;
    while(q--)
    {
        int n,i;
        cin>>n>>i;
        int f=1;
        f=f<<i;
        int res=(n&f);

        if(res==0)
        {
            cout<<i<<" th bit is not set"<<endl;
        }
        else
        {
             cout<<i<<" th bit is set"<<endl;
        }
    }

}
---------------------------------------------------------------------------------
                         Counting number of set bits
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int q;
    cin>>q;
    while(q--)
    {
        int n,cnt=0;
        cin>>n;
        while(n>0)
        {
            if((n&1)==1)            //log2(n)
            {
                cnt++;
            }
            n=n>>1;
        }
        cout<<cnt<<endl;
    }

}

Another Approach:

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int q;
    cin>>q;
    while(q--)
    {
        int n,cnt=0;
        cin>>n;
        while(n>0)
        {
            cnt++;
            n=n&(n-1);
        }
        cout<<cnt<<endl;
    }

}
----------------------------------------------------------------------------------
                                Pair Sum XOR of an array
** Given an array with n elements, calculating following
(a1+a1)^(a1+a2)^(a1+a3)^.....^(a1+an)^
(a2+a1)^(a2+a2)^(a2+a3)^.....^(a2+an)^
(a3+a1)^(a3+a2)^(a3+a3)^.....^(a3+an)^
.....................................
(an+a1)^(an+a2)^(an+a3)^.....^(an+an)^

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);

        int n;
        cin>>n;
        int arr[n+1];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];                             time complexity: n^2
        }
         int ans=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                ans^=(arr[i]+arr[j]);
            }
        }
        cout<<ans<<endl;

    }

}

Another Approach:

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);

        int n;
        cin>>n;
        int arr[n+1];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];                             time complexity: n
        }
        int ans=0;
        for(int i=0;i<n;i++)
        {

            ans^=2*arr[i];

        }
        cout<<ans<<endl;

    }

}

------------------------------------------------------------------------------------------
                      Total sum of all pair XOR
** Given an array with n elements, calculating following
(a1^a2)+(a1^a3)+.....+(a1^an)+
         (a2^a3)+....+(a2^an)+
         .........+(an-1 ^ an)


#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);

        int n;
        cin>>n;
        int arr[n+1];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];                          time complexity: n^2
        }
        int ans=0;
        for(int i=0;i<n-1;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                ans+=(arr[i]^arr[j]);
            }
        }
        cout<<ans<<endl;

    }

}

Another Approach:

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define endl '\n'


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);

        int n;
        cin>>n;
        int arr[n+1];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        int ans=0;
        for(int i=0;i<31;i++)
        {
            int cntZ=0,cntO=0;
            for(int j=0;j<n;j++)
            {
                if(arr[j]&(1<<i))
                {
                    cntO++;
                }
                else
                {
                    cntZ++;
                }
            }
            int p=cntO*cntZ;
           // ans+=p*(1<<i);
            ans+=pow(2,i)*p;
        }
        cout<<ans<<endl;

    }

}





